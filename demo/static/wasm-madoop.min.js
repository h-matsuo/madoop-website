"use strict";let execEmit=()=>{throw new Error("[Madoop] function `execEmit` not defined.")};(()=>{const e="undefined"==typeof MADOOP_SERVER_ENDPOINT_URL?"http://localhost:3000/madoop":MADOOP_SERVER_ENDPOINT_URL,t="undefined"==typeof MADOOP_PING_INTERVAL?1e3:MADOOP_PING_INTERVAL,n=e=>{"undefined"!=typeof MADOOP_MODE_DEBUG&&console.log(`[${(new Date).toISOString()}] [INFO] - ${e}`)},a=async e=>(n(`[GET] ${e}`),fetch(e,{method:"GET",headers:new Headers({Pragma:"no-cache","Cache-Control":"no-cache"})})),o=async(e,t)=>(n(`[POST] ${e}`),fetch(e,{method:"POST",body:JSON.stringify(t),headers:new Headers({"Content-Type":"application/json"})})),s=async e=>new Promise((t,n)=>{setTimeout(()=>{t()},e)}),i=new Map,r=async t=>{const n=JSON.stringify(t);if(i.has(n))return i.get(n);const o=await a(`${e}/wasmData/${t.phase}`).then(e=>e.json());let s;if((e=>{const t=document.createElement("script");t.text=e,document.head.appendChild(t).parentNode.removeChild(t)})(o.wasmJs),"map"===t.phase)await new Promise((e,t)=>{let n;const a={wasmBinary:new Uint8Array(o.wasmBinary.data),onRuntimeInitialized:()=>{const t=n.cwrap("map",null,["number"]);s=(e=>{const a=n.lengthBytesUTF8(e),o=n._malloc(a+1);n.stringToUTF8(e,o,a+1),t(o),n._free(o)}),e()}};n=Module(a)});else{if("reduce"!==t.phase)throw new Error(`[Madoop] invalid task phase provided: ${t.phase}`);await new Promise((e,t)=>{let n;const a={wasmBinary:new Uint8Array(o.wasmBinary.data),onRuntimeInitialized:()=>{const t=n.cwrap("reduce",null,["string","number"]);s=((e,a)=>{const o=n.lengthBytesUTF8(a),s=n._malloc(o+1);n.stringToUTF8(a,s,o+1),t(e,s),n._free(s)}),e()}};n=Module(a)})}return i.set(n,s),s};(async()=>{for(;;){const n=await a(`${e}/tasks/next`).then(e=>e.json());if(null===n.metaInfo){await s(t);continue}const i=await r(n.metaInfo),c=[];if(execEmit=((e,t)=>{const n={key:e,value:t};c.push(n)}),"map"===n.metaInfo.phase)i(n.inputData);else{if("reduce"!==n.metaInfo.phase)throw new Error(`[Madoop] invalid task id provided: ${n.metaInfo.phase}`);JSON.parse(n.inputData).forEach(e=>{i(e.key,e.values.toString())})}const d={metaInfo:JSON.stringify(n.metaInfo),result:JSON.stringify(c)};await o(`${e}/tasks/result`,d)}})()})();
